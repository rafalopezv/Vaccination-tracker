
make_color_pal <- function(colors, bias = 1) {
  get_color <- colorRamp(colors, bias = bias)
  function(x)
    rgb(get_color(x), maxColorValue = 255)
}

off_rating_color <-
  make_color_pal(c("#67a9cf", "#f8fcf8", "#ef8a62"), bias = 1.3)
def_rating_color <-
  make_color_pal(c("#67a9cf", "#f8fcf8", "#ef8a62"), bias = 0.8)

team_rating_column <- function(maxWidth = 55, ...) {
  colDef(
    maxWidth = maxWidth,
    align = "right",
    class = "cell number",
    headerStyle = list(fontWeight = "500"),
    ...
  )
}

aa <- tibble(
  tiempo_una_vacuna = c(runif(100, min = 1, max = 200), NA)
)

NFL_table_clean$OSRS %>% range()

espanol %>% select(tiempo_una_vacuna) %>% 
  filter_all(all_vars(!is.infinite(.))) %>% 
  filter_all(all_vars(!is.na(.)))  -> aa





reactable(aa,
  columns = list(
    
    tiempo_una_vacuna = team_rating_column(
      name = "Total",
      cell = function(value) {
        ### Normalize team rating in order to assign color from color palette
        normalized <-
            (value - min(aa$tiempo_una_vacuna)) / (max(aa$tiempo_una_vacuna) - min(aa$tiempo_una_vacuna))
            
          
        color <- off_rating_color(normalized)
        value <- format(value, nsmall = 1, digits = 1)
        ### Round corners of cell
        div(class = "roundcorners",
            style = list(background = color),
            value)
      }
    )
    
  )
  
)
  

if(value == NA) {
  next
} else(
  (value - min(aa$tiempo_una_vacuna)) / (max(aa$tiempo_una_vacuna) - min(aa$tiempo_una_vacuna))
)
